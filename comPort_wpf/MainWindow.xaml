<Window
        xmlns="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Class="comPort_wpf.MainWindow"
        xmlns:local="clr-namespace:comPort_wpf"
        xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
        Title="ComPort tool" Height="420" Width="1200" MinHeight="300" MinWidth="620" x:Name="mainWindow" Closing="MainWindow_Closing" >

    <Window.Resources>
        <!--TargetType="{x:Type TextBlock}" TargetType="{x:Type TextBox}"-->
        <SolidColorBrush x:Key="ColorBackground" Color="#FFB1ACAC" />
        <Style  x:Key="MyTextBLockStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="FontSize"             Value="12"/>
            <Setter Property="Background"           Value="{DynamicResource ColorBackground}"/>
            <Setter Property="Foreground"           Value="Black"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="TextTrimming"         Value="CharacterEllipsis"/>
        </Style>
        <Style  x:Key="MyTextBlokStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="FontSize"                     Value="12"/>
            <Setter Property="Background"                   Value="#FFC9C2C2"/>
            <Setter Property="Foreground"                   Value="Black"/>
            <Setter Property="Margin"                       Value="2,2,2,4"/>
            <Setter Property="HorizontalAlignment"          Value="Center"/>
            <Setter Property="VerticalAlignment"            Value="Center"/>
        </Style>
        <Style  x:Key="MyComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FontSize"                      Value="10"/>
            <Setter Property="VerticalAlignment"             Value="Center"/>
            <Setter Property="HorizontalContentAlignment"    Value="Center"/>
            <Setter Property="VerticalContentAlignment"      Value="Center"/>
            <Setter Property="Margin"                        Value="2,0,2,0"/>
            <Setter Property="IsEditable"                    Value="True"/>
            <Setter Property="IsReadOnly"                    Value="True"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        </Style>
        <Style x:Key="MyGridSplitterStyle" TargetType="{x:Type GridSplitter}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Cursor"              Value="Cross"/>
            <Setter Property="Background"          Value="#FF9A9A9A"/>
        </Style>
        <Style  x:Key="MyTextBoxStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize"             Value="12"/>
            <Setter Property="Background"           Value="Black"/>
            <Setter Property="Foreground"           Value="#FF0CE50C"/>
            <Setter Property="TextWrapping"         Value="NoWrap"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="TextTrimming"         Value="CharacterEllipsis"/>
        </Style>
        <Style x:Key="btn_Up_ToolBar" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="BorderThickness" Value="1,0,1,2"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="TuggleBtnConnect" TargetType="{x:Type ToggleButton}">
            <Setter Property="Height" Value="20"/>
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#FF414141"/>
                    <Setter Property="Foreground" Value="#FF0059FF"/>
                    <Setter Property="BorderBrush" Value="#FF08F308"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TuggleBtnDisconnect" TargetType="{x:Type ToggleButton}">
            <Setter Property="Height" Value="20"/>
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Button.MouseOver.Background}"/>
                    <Setter Property="Foreground" Value="#FFFF0202"/>
                    <Setter Property="BorderBrush" Value="GreenYellow"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#FF340404"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="Green"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="45"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Menu_TextBlock_Up_toolBar" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize"   Value="12"/>
            <Setter Property="Background" Value="#FF9DA1A3"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin"     Value="3,0,0,0"/>
            <Style.Triggers>
                <Trigger    Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  Value="#FF63AFC5"/>
                    <Setter Property="Foreground"  Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Menu_Up_toolBar" TargetType="{x:Type Menu}">
            <Setter Property="FontSize"   Value="12"/>
            <Setter Property="Background" Value="#FFCCCBCB"/> 
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin"     Value="2,0,0,0"/>
            <Style.Triggers>
                <Trigger    Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  Value="#FFCCCBCB"/>
                    <Setter Property="Foreground"  Value="Black"/>
                    
                </Trigger>
                <Trigger    Property="IsMainMenu"   Value="True">
                    <Setter Property="Background"  Value="#FFCCCBCB"/>
                    <Setter Property="Foreground"  Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="MenuItem_Up_toolBar" TargetType="{x:Type MenuItem}">
            <Setter Property="FontSize"   Value="12"/>
            <Setter Property="Background" Value="#FF9DA1A3"/>
            <!--<Setter Property="Width"      Value="85"/>-->
            <Setter Property="Height"      Value="22"/>
            <Setter Property="Margin"     Value="0,0,1,0"/>
            <Setter Property="Padding"    Value="0,1,0,0"/>
            <Style.Triggers>
                <Trigger    Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  Value="#FFCCCBCB"/>
                    <Setter Property="Foreground"  Value="Black"/>
                    <Setter Property="Opacity"  Value="0.9"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="myListVievStyle" TargetType="{x:Type ListView}">
            <Setter Property="Foreground"   Value="#FF0FCB36"/>
            <Setter Property="BorderBrush"   Value="#FF484F5C"/>
            <Setter Property="Background"   Value="Black"/>
            <Setter Property="OpacityMask"   Value="#FF1C1919"/>
            <Setter Property="FontSize"   Value="12"/>
            <Setter Property="Padding"   Value="-3,-2,-3,0"/>
            <Setter Property="SelectionMode"   Value="Multiple"/>
            
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>    
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Checked.Background" Color="SkyBlue"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <!--<ContextMenu x:Key="cmButton" >
            <MenuItem Header="Menu item 1" IsCheckable="True" Checked="menu1" />
            <MenuItem Header="Menu item 2" IsCheckable="True" Checked="menu2"/>
            <Separator />
            <MenuItem Header="Menu item 3" IsCheckable="True" Checked="menu3"/>
        </ContextMenu>-->

        <ContextMenu x:Key="mComPort"  />
        <ContextMenu x:Key="mBoudrate" >
            <MenuItem Header="110"    IsCheckable="True" />
            <MenuItem Header="300"    IsCheckable="True"/>
            <MenuItem Header="600"    IsCheckable="True"/>
            <MenuItem Header="1200"   IsCheckable="True"/>
            <MenuItem Header="2400"   IsCheckable="True"/>
            <MenuItem Header="4800"   IsCheckable="True"/>
            <MenuItem Header="9600"   IsCheckable="True"/>
            <MenuItem Header="14400"  IsCheckable="True"/>
            <MenuItem Header="19200"  IsCheckable="True"/>
            <MenuItem Header="38400"  IsCheckable="True"/>
            <MenuItem Header="56400"  IsCheckable="True"/>
            <MenuItem Header="57600"  IsCheckable="True"/>
            <MenuItem Header="115200" IsCheckable="True"/>
            <MenuItem Header="128000" IsCheckable="True"/>
            <MenuItem Header="256000" IsCheckable="True"/>
        </ContextMenu>

        <ContextMenu x:Key="mDataBit" >
            <MenuItem Header="5"      IsCheckable="True" />
            <MenuItem Header="6"      IsCheckable="True"/>
            <MenuItem Header="7"      IsCheckable="True"/>
            <MenuItem Header="8"      IsCheckable="True"/>
        </ContextMenu>
        <ContextMenu x:Key="mParityBit" >
            <MenuItem Header="нет."   IsCheckable="True" />
            <MenuItem Header="нечёт." IsCheckable="True"/>
            <MenuItem Header="чёт."   IsCheckable="True"/>
            <MenuItem Header="марк."  IsCheckable="True"/>
            <MenuItem Header="пробел" IsCheckable="True"/>
        </ContextMenu>
        <ContextMenu x:Key="mStopBit" >
            <MenuItem Header="1"      IsCheckable="True" />
            <MenuItem Header="1.5"    IsCheckable="True"/>
            <MenuItem Header="2"      IsCheckable="True"/>
        </ContextMenu>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="30" />
            <RowDefinition/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.ColumnSpan="3" Grid.Row="0" Orientation="Horizontal" Background="#FFCCCBCB" Height="20" >
            <Menu Height="20"                                               Style="{DynamicResource Menu_Up_toolBar}" >
                <MenuItem Header="  Сообщения  "                            Style="{DynamicResource MenuItem_Up_toolBar}">
                    <MenuItem Header="Редактор ообщений" />
                    <Separator/>
                    <MenuItem Header="Сообщение 1"/>
                    <MenuItem Header="Сообщение 2"/>
                    <MenuItem Header="Сообщение 3"/>
                    <Separator/>
                    <MenuItem Header="Сообщение из файла"/>
                    <Separator/>
                    <MenuItem Header="Выход из программы"/>
                </MenuItem>
                <MenuItem Header="  Вид   "                                 Style="{DynamicResource MenuItem_Up_toolBar}"  InputGestureText="true" >
                    <MenuItem Header="Сигналы"                              IsCheckable="True"/>
                    <MenuItem Header="Контроль времени"                     IsCheckable="True"/>
                    <MenuItem Header="Панель инструментов"                  IsCheckable="True"/>
                    <Separator/>
                    <MenuItem Header="Панель отправляемых сообщений"        IsCheckable="True"/>
                    <MenuItem Header="Панель принимаемых сообщений"         IsCheckable="True"/>
                    <Separator/>
                    <MenuItem Header="Журнал"/>
                </MenuItem>
                <MenuItem Header="  Настройки  "   Click="Terminal_Settings" Style="{DynamicResource MenuItem_Up_toolBar}"/>
                <MenuItem Header="  CommPort   "    Click="ComPortSettings" Style="{DynamicResource MenuItem_Up_toolBar}"/>
                <MenuItem Header=" О программе " Click="O_Programme_Click"  Style="{DynamicResource MenuItem_Up_toolBar}"/>
            </Menu>
            <Button Content="Click me!" VerticalAlignment="Center" HorizontalAlignment="Center" Click="Button_Click" />

            <!--<TextBlock Text="Сообщения"   MouseLeftButtonDown="Message_Menu"        Style="{DynamicResource Menu_TextBlock_Up_toolBar}"/>
            <TextBlock Text="Настройки"   MouseLeftButtonDown="Terminal_Settings"    Style="{DynamicResource Menu_TextBlock_Up_toolBar}"/>
            <TextBlock Text="ComPort"     MouseLeftButtonDown="Message_ComPort"     Style="{DynamicResource Menu_TextBlock_Up_toolBar}" x:Name="com_portt"/>
            <TextBlock Text="О Программе" MouseLeftButtonDown="Message_O_Programme" Style="{DynamicResource Menu_TextBlock_Up_toolBar}" x:Name="o_progr"/>-->
        </StackPanel>
        <StackPanel Grid.ColumnSpan="3" Grid.Row="1" Orientation="Horizontal" Background="#FFB4B4B4" >
            <ToggleButton x:Name="btnConect"    ToolTip="Открыть порт" Margin="3,0,2,0" Content="Connect"    Checked="btnConect_Checked"    Style="{DynamicResource TuggleBtnConnect}" />
            <ToggleButton x:Name="btnDisConect" ToolTip="Закрыть порт" Margin="2,0,2,0" Content="Disconnect" Checked="btnDisConect_Checked" Style="{DynamicResource TuggleBtnDisconnect}"/>

            <Button FontSize="12" VerticalAlignment="Center" ToolTip="Настройка порта"    Margin="2,0,24,0" Height="20" Click="ComPortSettings" Content="ComPort"/>
            <Button FontSize="12" VerticalAlignment="Center" ToolTip="Выход из программы" Margin="2,0,52,0" Height="20" Click="Exit_programm"   Content="Exit"/>
        </StackPanel>
        <StatusBar Grid.Column="3" Grid.Row="1"  Background="#FFB4B4B4" HorizontalAlignment="Right"   x:Name="StBClock" >
            <Separator/>
            <TextBlock x:Name="tBlockClock" Foreground="#FF1DEB14"  Background="Black" FontWeight="Bold" FontSize="16" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Width="65" Grid.IsSharedSizeScope="True" />
            <Separator/>
        </StatusBar>

        <Grid Grid.Row="2" Grid.ColumnSpan="3" Background="#FFCCC8C8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="300"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*" MinWidth="300" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>
            <ListView Name="TerminalTXList" Grid.Column="0" Grid.Row="0" SelectionChanged="TerminalTXList_SelectionChanged" Style="{DynamicResource myListVievStyle}"  ItemsSource="{DynamicResource ResourceKey=terminalTx}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Count}" >#</GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Time}"  >Время</GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=HEX}"   >Отправленно</GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=ASCII}" >ASCII</GridViewColumn>
                    </GridView>
                </ListView.View>
                
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Копировать" Command="Copy"></MenuItem>
                        <Separator/>
                        <MenuItem Header="Выбрать всё..." Command="Select"></MenuItem>
                        <Separator/>
                        <MenuItem Header="Сохранить в файл..." Command="Save"></MenuItem>
                        <MenuItem Header="Сохранить всё в HTML..."></MenuItem>
                        <Separator/>
                        <MenuItem Header="Поиск..." Command="Find"></MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
            <GridSplitter                   Grid.Column="1" Grid.RowSpan="3" Background="#FF8E90A4" ShowsPreview="True" Width="4" HorizontalAlignment="Stretch"  />
            <ListView Name="TerminalRXList" Grid.Column="2" Grid.Row="0" SelectionChanged="TerminalRXList_SelectionChanged" Style="{DynamicResource myListVievStyle}"  ItemsSource="{DynamicResource ResourceKey=terminalRx}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Count}" >#</GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Time}"  >Время</GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=HEX}"   >Принято</GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=ASCII}" >ASCII</GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Копировать" Click="CopyRx"></MenuItem>
                        <Separator/>
                        <MenuItem Header="Выбрать всё..."></MenuItem>
                        <Separator/>
                        <MenuItem Header="Сохранить в файл..."></MenuItem>
                        <MenuItem Header="Сохранить всё в HTML..."></MenuItem>
                        <Separator/>
                        <MenuItem Header="Поиск..." IsCheckable="True"></MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu> 
            </ListView>
            <!--пример привязки<Grid MinWidth="600" Width="{Binding RelativeSource={RelativeSource AncestorType=ScrollViewer}, Path=ActualWidth}">-->
            <Button                            Grid.Column="0" Grid.Row="1" Content="Очистка"    HorizontalAlignment="Right" Click="Clear_tx" ToolTip="Очистить окно передачи"                      VerticalAlignment="Center"/>
            <ToggleButton x:Name="btnStop_rx"  Grid.Column="2" Grid.Row="1" Content="Стоп Приём" HorizontalAlignment="Left"                   ToolTip="Приостановить вывод сообщений в окно приёма" VerticalAlignment="Center" Click="btn_Stop_Rx_Check"/>
            <Button                            Grid.Column="2" Grid.Row="1" Content="Очистка"    HorizontalAlignment="Right" Click="Clear_rx" ToolTip="Очистить окно приёма"                        VerticalAlignment="Center"/>
        </Grid>

        <StatusBar  Height="30" Grid.Column="0" Grid.Row="3"  Grid.ColumnSpan="3" Background="#FF847E7F" x:Name="stbsender" >
            <TextBox x:Name="tBoxMessage_tx" Width="300" Text=""/>
            <Separator/>
            <Button x:Name="btnSend_tx" SnapsToDevicePixels="True" ClipToBounds="True" Click="send_tx_message" ToolTip="Подсказка!" VerticalAlignment="Center" Content="Send"/>
            <Separator/>
        </StatusBar>
        <Grid Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="3" UseLayoutRounding="False"  Background="#FF847E7F" x:Name="gridToolBar">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="toolbar_sostoyanie" HorizontalAlignment="Stretch" Grid.IsSharedSizeScope="True" Padding="1,0,0,0" Background="#FF707070"  Foreground="Black" Grid.Column="0" Grid.ColumnSpan="2" />
			<DockPanel   Grid.Column="2" Grid.Row="0" Height="25"  VerticalAlignment="Top"  Width="Auto" LastChildFill="False" Margin="0,0,4,0" Grid.IsSharedSizeScope="True" >
				<TextBlock x:Name="box1" Width="80"  Style="{DynamicResource MyTextBlokStyle}" DataContext="{Binding MyPort, ElementName=MainWindow,FallbackValue=portName}"   MouseLeftButtonDown="Box_Click_Port"    />
				<TextBlock x:Name="box2" Width="90"  Style="{DynamicResource MyTextBlokStyle}" DataContext="{Binding MyPort, ElementName=MainWindow,FallbackValue=baudRate}"   MouseLeftButtonDown="Box_Click_Boudrate"/>
				<TextBlock x:Name="box3" Width="80"  Style="{DynamicResource MyTextBlokStyle}" DataContext="{Binding MyPort, ElementName=MainWindow,FallbackValue=parityBits}" MouseLeftButtonDown="Box_Click_Parity"  />
				<TextBlock x:Name="box4" Width="100" Style="{DynamicResource MyTextBlokStyle}" DataContext="{Binding MyPort, ElementName=MainWindow,FallbackValue=dataBits}"   MouseLeftButtonDown="Box_Click_DataBit" />
                <TextBlock x:Name="box5" Width="95"  Style="{DynamicResource MyTextBlokStyle}" DataContext="{Binding MyPort, ElementName=MainWindow,FallbackValue=stopBits}"   MouseLeftButtonDown="Box_Click_StopBit" />
                <StackPanel/>
			</DockPanel>
        </Grid>

    </Grid>
</Window>

<!--MouseLeftButtonDown="Box_Click_Port"    
    MouseLeftButtonDown="Box_Click_Boudrate"
    MouseLeftButtonDown="Box_Click_Parity"  
    MouseLeftButtonDown="Box_Click_DataBit" 
    MouseLeftButtonDown="Box_Click_StopBit"-->

<!-- DataContext="{Binding MyPort, ElementName=mainWindow,FallbackValue=portName}"  
     DataContext="{Binding MyPort, ElementName=mainWindow,FallbackValue=baudRate}"  
     DataContext="{Binding MyPort, ElementName=mainWindow,FallbackValue=parityBits}"
     DataContext="{Binding MyPort, ElementName=mainWindow,FallbackValue=dataBits}"  
     DataContext="{Binding MyPort, ElementName=mainWindow,FallbackValue=stopBits}"

     DataContext="{Binding Path=MyCom}" Text="{Binding Path=portName}"
     DataContext="{Binding Path=MyCom}" Text="{Binding Path=baudRat}"
     DataContext="{Binding Path=MyCom}" Text="{Binding Path=parity}"
     DataContext="{Binding Path=MyCom}" Text="{Binding Path=dBit}"
     DataContext="{Binding Path=MyCom}" Text="{Binding Path=sBit}"-->

<!--<ComboBoxItem Content="110"    IsSelected="False"/>
    <ComboBoxItem Content="300"    IsSelected="False"/>
    <ComboBoxItem Content="600"    IsSelected="False"/>
    <ComboBoxItem Content="1200"   IsSelected="False"/>
    <ComboBoxItem Content="2400"   IsSelected="False"/>
    <ComboBoxItem Content="4800"   IsSelected="False"/>
    <ComboBoxItem Content="9600"   IsSelected="False"/>
    <ComboBoxItem Content="14400"  IsSelected="False"/>
    <ComboBoxItem Content="19200"  IsSelected="False"/>
    <ComboBoxItem Content="38400"  IsSelected="False"/>
    <ComboBoxItem Content="56400"  IsSelected="False"/>
    <ComboBoxItem Content="57600"  IsSelected="False"/>
    <ComboBoxItem Content="115200" IsSelected="True"/>
    <ComboBoxItem Content="128000" IsSelected="False"/>
    <ComboBoxItem Content="256000" IsSelected="False"/>

<ComboBoxItem Content="5" IsSelected="False"/>
<ComboBoxItem Content="6" IsSelected="False"/>
<ComboBoxItem Content="7" IsSelected="False"/>
<ComboBoxItem Content="8" IsSelected="True"/>

<ComboBoxItem Content="нет."   IsSelected="True"/>
<ComboBoxItem Content="нечёт." IsSelected="False"/>
<ComboBoxItem Content="чёт."   IsSelected="False"/>
<ComboBoxItem Content="марк."  IsSelected="False"/>
<ComboBoxItem Content="пробел" IsSelected="False"/>

<ComboBoxItem Content="1"   IsSelected="True"/>
<ComboBoxItem Content="1.5" IsSelected="False"/>
<ComboBoxItem Content="2"   IsSelected="False"/>-->

<!--<StackPanel>
                <StackPanel.Resources>
                    <src:ComboboxInit x:Key="myComboInit"/>
                </StackPanel.Resources>
                <ComboBox Name="box2" Text="My Cities" IsEditable="true" IsReadOnly="true" />-->
<!--ItemsSource="{StaticResource myComboInit}"-->
<!--<TextBlock Text="{Binding ElementName=box2, Path=SelectedItem}"/>
            </StackPanel>-->




<!--<TextBox x:Name="tx_message" Grid.Column="0" Grid.Row="1"     Background="Black"     Foreground="#FF2AEE0F" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" AcceptsReturn="True"  />
<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="0" Background="Black" CanContentScroll="True" >
<Grid >
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" MinWidth="40"  MaxWidth="65" />
        <ColumnDefinition Width="2"/>
        <ColumnDefinition Width="Auto" MinWidth="40"  MaxWidth="90" />
        <ColumnDefinition Width="2"/>
        <ColumnDefinition Width="Auto" MinWidth="100" MaxWidth="700"/>
        <ColumnDefinition Width="2"/>
        <ColumnDefinition Width="Auto" MinWidth="70"  MaxWidth="700"/>
        <ColumnDefinition Width="2"/>
        <ColumnDefinition Width="*" MinWidth="10"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
        <RowDefinition Height="20"/>
        <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <TextBlock                               Grid.Row="0" Grid.Column="0" Text=" # "          Style="{DynamicResource MyTextBLockStyle}"/>
    <TextBlock   x:Name="tx_message_hashtag" Grid.Row="1" Grid.Column="0" Text=""             Style="{DynamicResource MyTextBoxStyle}"/>
    <GridSplitter                            Grid.Row="0" Grid.Column="1" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}"/>
    <TextBlock                               Grid.Row="0" Grid.Column="2" Text=" Время "      Style="{DynamicResource MyTextBLockStyle}"/>
    <TextBlock   x:Name="tx_message_time"    Grid.Row="1" Grid.Column="2" Text=""             Style="{DynamicResource MyTextBoxStyle}" />
    <GridSplitter                            Grid.Row="0" Grid.Column="3" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}"/>
    <TextBlock                               Grid.Row="0" Grid.Column="4" Text=" Отправленно" Style="{DynamicResource MyTextBLockStyle}" />
    <TextBlock   x:Name="tx_message_data"    Grid.Row="1" Grid.Column="4" Text=""             Style="{DynamicResource MyTextBoxStyle}"/>
    <GridSplitter                            Grid.Row="0" Grid.Column="5" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}"/>
    <TextBlock                               Grid.Row="0" Grid.Column="6" Text=" ASCII "      Style="{DynamicResource MyTextBLockStyle}" />
    <TextBlock   x:Name="tx_message_ascii"   Grid.Row="1" Grid.Column="6" Text=""             Style="{DynamicResource MyTextBoxStyle}"/>
    <GridSplitter                            Grid.Row="0" Grid.Column="7" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}"/>
    <StackPanel                              Grid.Row="0" Grid.Column="8" Grid.RowSpan="1"    Background="{DynamicResource ColorBackground}"/>
</Grid>
</ScrollViewer>
<GridSplitter         Grid.Column="1" Grid.RowSpan="3" Background="#FF8E90A4" ShowsPreview="True" Width="4" HorizontalAlignment="Stretch"  />
<TextBox x:Name="rx_message" Grid.Column="2" Grid.Row="0"     Background="Black"     Foreground="#FF03E000" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" AcceptsReturn="True"  />
<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.Column="2" Grid.Row="0" Background="Black" CanContentScroll="True" Focusable="False"  >
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="40"  MaxWidth="65" />
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="Auto" MinWidth="40"  MaxWidth="90" />
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="Auto" MinWidth="100" MaxWidth="700"/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="Auto" MinWidth="70"  MaxWidth="700"/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="*" MinWidth="10"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock                               Grid.Row="0" Grid.Column="0" Text=" # "          Style="{DynamicResource MyTextBLockStyle}"/>
        <TextBlock   x:Name="rx_message_hashtag" Grid.Row="1" Grid.Column="0" Text=""             Style="{DynamicResource MyTextBoxStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
        <GridSplitter                            Grid.Row="0" Grid.Column="1" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}"/>
        <TextBlock                               Grid.Row="0" Grid.Column="2" Text=" Время "      Style="{DynamicResource MyTextBLockStyle}"/>
        <TextBlock   x:Name="rx_message_time"    Grid.Row="1" Grid.Column="2" Text=""             Style="{DynamicResource MyTextBoxStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
        <GridSplitter                            Grid.Row="0" Grid.Column="3" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}"/>
        <TextBlock                               Grid.Row="0" Grid.Column="4" Text=" Принято"     Style="{DynamicResource MyTextBLockStyle}"/>
        <TextBlock   x:Name="rx_message_data"    Grid.Row="1" Grid.Column="4" Text=""             Style="{DynamicResource MyTextBoxStyle}" />
        <GridSplitter                            Grid.Row="0" Grid.Column="5" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
        <TextBlock                               Grid.Row="0" Grid.Column="6" Text=" ASCII "      Style="{DynamicResource MyTextBLockStyle}"/>
        <TextBlock   x:Name="rx_message_ascii"   Grid.Row="1" Grid.Column="6" Text=""             Style="{DynamicResource MyTextBoxStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
        <GridSplitter                            Grid.Row="0" Grid.Column="7" Grid.RowSpan="1"    Style="{DynamicResource MyGridSplitterStyle}"/>
        <StackPanel                              Grid.Row="0" Grid.Column="8" Grid.RowSpan="1"    Background="{DynamicResource ColorBackground}"/>
    </Grid>
</ScrollViewer>-->